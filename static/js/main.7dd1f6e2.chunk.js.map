{"version":3,"sources":["components/UploadFile.js","components/FileTable.js","HomePage.js","request.js","DocumentForm.js","Editor.js","components/MusicPlayer.js","components/TopBar.js","store.js","App.js","serviceWorker.js","index.js"],"names":["optionsLoading","type","color","height","width","UploadFile","onChangeFile","onSubmit","onAnalyticFile","useState","selectedFile","setSelectedFile","loading","setLoading","method","action","id","className","multiple","accept","onChange","event","target","files","onClick","Swal","fire","title","text","icon","then","res","data","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","result","value","name","questions","timer","dismiss","DismissReason","cancel","catch","err","console","log","FileTable","editRow","deleteRow","totalQuestion","setTotalQuestion","useEffect","length","total","map","calSum","file","index","key","colSpan","HomePage","setFiles","formData","FormData","append","axios","post","headers","filter","APIURL","require","addDocument","schema","yup","required","observer","documentStore","edit","doc","onSave","onEdit","React","content","setContent","dirty","setDirty","handleSubmit","evt","a","validate","contentSubmit","newDoc","validationSchema","initialValues","handleChange","values","handleBlur","touched","errors","isInvalid","Form","noValidate","Row","Group","as","Col","md","controlId","Label","Control","placeholder","Feedback","editor","ClassicEditor","onInit","getData","config","ckfinder","uploadUrl","Button","style","marginRight","withRouter","history","openAddModal","setOpenAddModal","openEditModal","setOpenEditModal","initialized","setInitialized","setDoc","setEdit","documents","setDocuments","cancelAddModal","cancelEditModal","getAllDocuments","editDocument","d","deleteSingleDocument","ButtonToolbar","variant","Modal","show","onHide","Header","closeButton","Title","Body","bind","this","cancelModal","Table","striped","bordered","hover","audioList1","singer","cover","musicSrc","Promise","resolve","MusicPlayer","props","options","audioLists","theme","defaultPosition","top","left","autoPlay","auto","location","Navbar","bg","expand","Brand","href","root","Toggle","aria-controls","Collapse","Nav","Link","DocumentStore","decorate","observable","createHistory","App","path","exact","component","Editor","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dd1f6e2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Swal from 'sweetalert2'\nimport ReactLoading from 'react-loading'\n\nconst optionsLoading = {\n  type: 'cylon',\n  color: '#000000',\n  height: 200,\n  width: 100\n}\n\nconst UploadFile = ({ onChangeFile, onSubmit, onAnalyticFile }) => {\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [loading, setLoading] = useState(0)\n\n  const onChangeHandler = (event) => {\n    setSelectedFile(event.target.files[0])\n    onChangeFile(event.target.files[0])\n  }\n\n  const onClickHandler = () => {\n    if (!selectedFile) {\n      Swal.fire({\n        title: 'Wrong!',\n        text: 'Cần để file vào.',\n        icon: 'error'\n      })\n    } else { setLoading(1) }\n\n    onSubmit(selectedFile).then((res) => {\n      setLoading(0)\n      Swal.fire({\n        title: 'Success',\n        text: 'Số câu hỏi trong file là: ' + res.data,\n        icon: 'success',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#aaa',\n        cancelButtonText: 'Huỷ',\n        confirmButtonText: 'Cập nhật'\n      }).then((result) => {\n        if (result.value) {\n          onAnalyticFile({ name: selectedFile.name, questions: res.data })\n          Swal.fire({\n            title: '',\n            text: 'Done',\n            icon: 'success',\n            timer: 3000\n          })\n        } else if (\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          Swal.fire({\n            title: 'Đã huỷ',\n            text: ' ',\n            icon: 'warning',\n            timer: 3000\n          })\n        }\n      }).catch((err) => {\n        setLoading(0)\n        console.log(err)\n      })\n    })\n  }\n  if (loading) {\n    return (\n      <>\n        <form method='post' action='#' id='#'>\n          <div className='form-group files'>\n            <label>UPLOAD YOUR FILE</label>\n            <ReactLoading {...optionsLoading} />\n          </div>\n        </form>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <form method='post' action='#' id='#'>\n          <div className='form-group files'>\n            <label>UPLOAD YOUR FILE</label>\n            <input type='file' className='form-control' multiple='' accept='.pdf' onChange={onChangeHandler} />\n            <button type='button' className='btn btn-success btn-block' onClick={onClickHandler}>Upload</button>\n          </div>\n        </form>\n      </>\n    )\n  }\n}\n\nexport default UploadFile\n","import React, { useState, useEffect } from 'react'\n// display\nconst FileTable = ({ files, editRow, deleteRow }) => {\n  const [totalQuestion, setTotalQuestion] = useState(0)\n  useEffect(() => {\n    const calSum = (files) => {\n      let total = 0\n      files.map((value) => {\n        total += value.questions\n      })\n      return total\n    }\n    if (files.length > 0) setTotalQuestion(calSum(files)); else setTotalQuestion(0)\n  }, [files])\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>FILENAME</th>\n          <th>TOTAL</th>\n          <th>ACTION</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          (files.length > 0) ? (\n            files.map((file, index) => {\n              return (\n                <tr key={file.id}>\n                  <td>{file.name}</td>\n                  <td>{file.questions}</td>\n                  <td>\n                    <button\n                      className='button muted-button'\n                      onClick={() => {\n                        editRow(file)\n                      }}\n                    >\n                      Details\n                    </button>\n                    <button\n                      className='button muted-button'\n                      onClick={() => { deleteRow(file.id) }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              )\n            })\n          ) : (\n            <tr>\n              <td colSpan={3}>No files</td>\n            </tr>\n          )\n        }\n      </tbody>\n      <tfoot>\n        <tr>\n          <td><strong>Total Question</strong></td>\n          <td>{totalQuestion}</td>\n        </tr>\n      </tfoot>\n    </table>\n  )\n}\n\nexport default FileTable\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport FormData from 'form-data'\nimport './App.css'\nimport Swal from 'sweetalert2'\n\nimport UploadFile from './components/UploadFile'\nimport FileTable from './components/FileTable'\n\nconst HomePage = () => {\n  const [files, setFiles] = useState([])\n\n  const onChangeFile = (file) => {\n  }\n\n  const onAnalyticFile = (file) => {\n    if (files.length === 0) file.id = 1\n    else file.id = files.length + 1\n    setFiles([...files, file])\n  }\n\n  const onSubmit = (file) => {\n    const url = 'https://strapi-tungtung.herokuapp.com/questions/counter'\n    const formData = new FormData()\n    formData.append('files', file)\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n    return axios.post(url, formData, config)\n  }\n\n  const deleteRow = id => {\n    setFiles(files.filter(file => file.id !== id))\n  }\n\n  useEffect(() => {\n    Swal.fire({\n      title: 'Update lần này có gì ta ?',\n      text: 'Tính năng editor convert docx to html. - Editor cải thiện tốc độ nhiều hơn. - Format text và edit trực tiếp trực quan.',\n      icon: 'info',\n      confirmButtonColor: '#3085d6',\n      confirmButtonText: 'Okay',\n      timer: 10000\n    })\n  }, [])\n\n  return (\n    <>\n      <div className='container'>\n        <div className='flex-row'>\n          <div className='flex-large'>\n            <UploadFile onChangeFile={onChangeFile} onSubmit={onSubmit} onAnalyticFile={onAnalyticFile} />\n          </div>\n          <div className='flex-large'>\n            <label>ANALYTICS</label>\n            <FileTable files={files} deleteRow={deleteRow} />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default HomePage\n","export const APIURL = 'https://strapi-tungtung.herokuapp.com'\nconst axios = require('axios')\nexport const getDocuments = () => axios.get(`${APIURL}/document`)\nexport const addDocument = data => axios.post(`${APIURL}/questions/countbystr`, data)\nexport const editDocument = data => axios.put(`${APIURL}/document/${data.id}`, data)\nexport const deleteDocument = id => axios.delete(`${APIURL}/document/${id}`)\nexport const generateDocument = id => axios.get(`${APIURL}/document/generate/${id}`)\n","import React from 'react'\nimport * as yup from 'yup'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport { observer } from 'mobx-react'\nimport { Formik } from 'formik'\nimport { addDocument, APIURL } from './request'\nimport CKEditor from '@ckeditor/ckeditor5-react'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\nimport Swal from 'sweetalert2'\n\nconst schema = yup.object({\n  name: yup.string().required('Name is required')\n})\n\nfunction DocumentForm ({ documentStore, edit, onSave, doc, onSubmit, onEdit }) {\n  const [content, setContent] = React.useState('')\n  const [dirty, setDirty] = React.useState(false)\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt)\n    if (!isValid || !content) {\n      return\n    }\n    const contentSubmit = { text: content }\n    if (!edit) {\n      const { data } = await addDocument(contentSubmit)\n      const newDoc = {\n        name: evt.name,\n        data,\n        content\n      }\n      onSubmit(newDoc)\n      Swal.fire({\n        title: 'Success',\n        text: 'Số câu hỏi đọc được là: ' + data,\n        icon: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Okay',\n        timer: 10000\n      })\n    } else {\n      const { data } = await addDocument(contentSubmit)\n      const newDoc = {\n        name: evt.name,\n        data,\n        content\n      }\n      onEdit(doc.id, newDoc)\n      Swal.fire({\n        title: 'Success',\n        text: 'Số câu hỏi ở bản này là: ' + data,\n        icon: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Okay',\n        timer: 10000\n      })\n    }\n  }\n  return (\n    <>\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        initialValues={doc || {}}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isInvalid,\n          errors\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} md='12' controlId='name'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='name'\n                  placeholder='Name'\n                  value={values.name || ''}\n                  onChange={handleChange}\n                  isInvalid={touched.name && errors.name}\n                />\n                <Form.Control.Feedback type='invalid'>\n                  {errors.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} md='12' controlId='content'>\n                <Form.Label>Content</Form.Label>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={content || ''}\n                  onInit={editor => {\n                    if (edit) {\n                      setContent(doc.content)\n                    }\n                  }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setContent(data)\n                    setDirty(true)\n                  }}\n                  config={{\n                    ckfinder: {\n                      uploadUrl:\n                        `${APIURL}/document/uploadImage`\n                    }\n                  }}\n                />\n                <div className='content-invalid-feedback'>\n                  {dirty && !content ? 'Content is required' : null}\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Button type='submit' style={{ marginRight: 10 }}>\n              Save\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\nexport default observer(DocumentForm)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport DocumentForm from './DocumentForm'\nimport Modal from 'react-bootstrap/Modal'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport { observer } from 'mobx-react'\n\nfunction EditorPage ({ documentStore, history }) {\n  const [openAddModal, setOpenAddModal] = useState(false)\n  const [openEditModal, setOpenEditModal] = useState(false)\n  const [initialized, setInitialized] = useState(false)\n  const [doc, setDoc] = useState([])\n  const [edit, setEdit] = useState(false)\n  const [documents, setDocuments] = useState([])\n\n  const onSubmit = (doc) => {\n    if (documents.length === 0) doc.id = 1\n    else doc.id = documents.length + 1\n    setDocuments([...documents, doc])\n    setOpenAddModal(false)\n  }\n\n  const onEdit = (id, newDoc) => {\n    setDocuments(documents.filter(file => file.id !== id))\n    getAllDocuments()\n    if (documents.length === 0) newDoc.id = 1\n    else newDoc.id = documents.length + 1\n    setDocuments([...documents, newDoc])\n    setOpenEditModal(false)\n  }\n\n  const openAddTemplateModal = () => {\n    setOpenAddModal(true)\n  }\n  const closeAddModal = () => {\n    setOpenAddModal(false)\n    setOpenEditModal(false)\n  }\n  const cancelAddModal = () => {\n    setOpenAddModal(false)\n  }\n  const cancelEditModal = () => {\n    setOpenEditModal(false)\n  }\n  const getAllDocuments = async () => {\n    setInitialized(true)\n  }\n  const editDocument = d => {\n    setEdit(true)\n    setDoc(d)\n    setOpenEditModal(true)\n  }\n  const onSave = () => {\n    cancelAddModal()\n    cancelEditModal()\n  }\n  const deleteSingleDocument = id => {\n    setDocuments(documents.filter(file => file.id !== id))\n    getAllDocuments()\n  }\n  useEffect(() => {\n    if (!initialized) {\n      getAllDocuments()\n    }\n  })\n  return (\n    <div className='page'>\n      <h1 className='text-center'>Documents</h1>\n      <ButtonToolbar onClick={openAddTemplateModal}>\n        <Button variant='primary'>Add Document</Button>\n      </ButtonToolbar>\n      <Modal show={openAddModal} onHide={closeAddModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Document</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <DocumentForm\n            onSave={onSave.bind(this)}\n            cancelModal={cancelAddModal.bind(this)}\n            documentStore={documentStore}\n            onSubmit={onSubmit}\n          />\n        </Modal.Body>\n      </Modal>\n      <Modal show={openEditModal} onHide={cancelEditModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Document</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <DocumentForm\n            edit={edit}\n            doc={doc}\n            onSave={onSave.bind(this)}\n            cancelModal={cancelEditModal.bind(this)}\n            documentStore={documentStore}\n            onEdit={onEdit}\n          />\n        </Modal.Body>\n      </Modal>\n      <br />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Generate Question</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {documents.map(d => {\n            return (\n              <tr key={d.id}>\n                <td>{d.name}</td>\n                <td>\n                  <strong>{d.data}</strong>\n                </td>\n                <td>\n                  <Button\n                    variant='outline-primary'\n                    onClick={editDocument.bind(this, d)}\n                  >\n                    Edit\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    variant='outline-primary'\n                    onClick={deleteSingleDocument.bind(this, d.id)}\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\nexport default withRouter(observer(EditorPage))\n","import React from 'react'\nimport ReactJkMusicPlayer from 'react-jinke-music-player'\nimport 'react-jinke-music-player/assets/index.css'\n\nconst audioList1 = [\n  {\n    name: 'Sao Không Nói ( Của Ngạn )',\n    singer: 'S.V',\n    cover: '//cdn.lijinke.cn/nande.jpg',\n    musicSrc: () => {\n      return Promise.resolve(\n        'https://dl.freemp3downloads.online/file/youtubebH2py-szYrE320.mp3?fn=Sao%20Kh%C3%B4ng%20N%C3%B3i%20(%20C%E1%BB%A7a%20Ng%E1%BA%A1n%20)%20-%20S.V%E3%80%8CLyrics%20Video%E3%80%8DMeens.mp3'\n      )\n    }\n  },\n  {\n    name: 'Despacito',\n    singer: 'Luis Fonsi',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc: () => {\n      return Promise.resolve(\n        'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3'\n      )\n    }\n  },\n  {\n    name: 'Mãi Chẳng Thuộc Về Nhau',\n    singer: 'Bozitt',\n    musicSrc: () => {\n      return Promise.resolve(\n        'http://dl21.freemp3downloads.online/file/youtubepse2JFM0rno320.mp3?fn=M%C3%A3i%20Ch%E1%BA%B3ng%20Thu%E1%BB%99c%20V%E1%BB%81%20Nhau%20-%20Bozitt%20_%20MV%20Lyrics%20HD.mp3'\n      )\n    }\n  },\n  {\n    name: 'Độc Thân Không Phải Là Ế',\n    singer: 'Nguyễn Trung Đức',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n    musicSrc: () => {\n      return Promise.resolve(\n        'https://dl.freemp3downloads.online/file/youtubeJbu7B-R4ooY320.mp3?fn=%C4%90%E1%BB%99c%20Th%C3%A2n%20Kh%C3%B4ng%20Ph%E1%BA%A3i%20L%C3%A0%20%E1%BA%BE%20-%20Nguy%E1%BB%85n%20Trung%20%C4%90%E1%BB%A9c%20_%20MV%20Lyrics%20Official.mp3'\n      )\n    }\n  },\n  {\n    name: 'Đường Tôi Chở Em Về',\n    singer: 'buitruonglinh',\n    cover:\n      'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n    musicSrc: () => {\n      return Promise.resolve(\n        'http://dl20.freemp3downloads.online/file/youtubeZa4maU2tvsg128.mp3?fn=%C4%90%C6%B0%E1%BB%9Dng%20T%C3%B4i%20Ch%E1%BB%9F%20Em%20V%E1%BB%81%20-%20buitruonglinh%20_%20MV%20Lyrics%20HD.mp3'\n      )\n    }\n  },\n  {\n    name: 'Nắng Theo Em',\n    singer: 'YANG',\n    cover: '//cdn.lijinke.cn/nande.jpg',\n    musicSrc: () => {\n      return Promise.resolve('http://dl20.freemp3downloads.online/file/youtubelpkaUmeIxDo320.mp3?fn=N%E1%BA%AFng%20Theo%20Em%20-%20YANG%E3%80%8CLyrics%20Video%E3%80%8DMeens.mp3'\n      )\n    }\n  },\n  {\n    name: 'Về Với Anh Nha',\n    singer: 'LilGee Phạm x Nguyễn Quang Quý, Đinh Vũ Duy',\n    musicSrc: () => {\n      return Promise.resolve('http://dl16.freemp3downloads.online/file/youtubevU4V_C8dYlc320.mp3?fn=V%E1%BB%81%20V%E1%BB%9Bi%20Anh%20Nha%20-%20LilGee%20Ph%E1%BA%A1m%20x%20Nguy%E1%BB%85n%20Quang%20Qu%C3%BD%2C%20%C4%90inh%20V%C5%A9%20Duy%20_%20MV%20Lyrics%20HD.mp3'\n      )\n    }\n  },\n  {\n    name: 'Ăn Gì Anh Mời',\n    singer: 'LeeAndy',\n    musicSrc: () => {\n      return Promise.resolve('https://dl.freemp3downloads.online/file/youtubeNunsCUt6f4A320.mp3?fn=%C4%82n%20G%C3%AC%20Anh%20M%E1%BB%9Di%20-%20LeeAndy%20(%20N%E1%BA%A5m%20-%20MISTHY%20)%20Video%20Lyric.mp3'\n      )\n    }\n  },\n  {\n    name: 'Hơn Cả Yêu',\n    singer: 'Đức Phúc',\n    musicSrc: () => {\n      return Promise.resolve('https://dl.freemp3downloads.online/file/youtubezJZKCSho1S4320.mp3?fn=H%C6%A1n%20C%E1%BA%A3%20Y%C3%AAu%20_%20%C4%90%E1%BB%A9c%20Ph%C3%BAc%20_%20Bun%20%26%20Orin%20Cover.mp3'\n      )\n    }\n  },\n  {\n    name: 'Lấy Chồng Sớm Làm Gì',\n    singer: 'HuyR ft. Tuấn Cry',\n    musicSrc: () => {\n      return Promise.resolve('https://dl.freemp3downloads.online/file/youtubepSFXJ7teisw320.mp3?fn=HuyR%20ft.%20Tu%E1%BA%A5n%20Cry%20-%20L%E1%BA%A5y%20Ch%E1%BB%93ng%20S%E1%BB%9Bm%20L%C3%A0m%20G%C3%AC%20(Ballad%20Version).mp3'\n      )\n    }\n  }\n]\n\nconst MusicPlayer = (props) => {\n  const options = {\n    // audio lists model\n    audioLists: audioList1,\n    theme: props.theme,\n    defaultPosition: {\n      top: props.top,\n      left: props.left\n    },\n    autoPlay: props.auto\n  }\n\n  return (\n    <>\n      <ReactJkMusicPlayer {...options} />\n    </>\n  )\n}\n\nexport default MusicPlayer\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { withRouter } from 'react-router-dom'\nimport MusicPlayer from './MusicPlayer'\nconst root = '/cam'\n\nfunction TopBar ({ location }) {\n  return (\n    <>\n      <Navbar bg='primary' expand='lg' variant='dark'>\n        <Navbar.Brand href={root + '/'}>Beta - 1.0.1</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <Nav.Link href={root + '/'}>\n            Upload files\n            </Nav.Link>\n            <Nav.Link href={root + '/editor'}>\n            Editor\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <MusicPlayer theme='light' top={500} left={50} auto={false} />\n    </>\n  )\n}\nexport default withRouter(TopBar)\n","import { observable, action, decorate } from \"mobx\";\nclass DocumentStore {\n  documents = [];\nsetDocuments(documents) {\n    this.documents = documents;\n  }\n}\nDocumentStore = decorate(DocumentStore, {\n  documents: observable,\n  setDocuments: action\n});\nexport { DocumentStore };","import React from 'react'\nimport HomePage from './HomePage'\nimport EditorPage from './Editor'\nimport { Router, Route } from 'react-router-dom'\nimport { createBrowserHistory as createHistory } from 'history'\nimport TopBar from './components/TopBar'\nimport { DocumentStore } from './store'\nimport './App.css'\n\nconst history = createHistory()\nconst documentStore = new DocumentStore()\nconst root = '/cam'\n\nconst App = () => {\n  return (\n    <>\n      <div className='App'>\n        <Router history={history}>\n          <TopBar />\n          <Route\n            path={root + '/'}\n            exact\n            component={props => (\n              <HomePage {...props} />\n            )}\n          />\n          <Route\n            path={root + '/editor'}\n            exact\n            component={props => (\n              <EditorPage {...props} documentStore={documentStore} />\n            )}\n          />\n        </Router>\n      </div>\n    </>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}